--- a/usr/share/perl5/Lemonldap/NG/Common/Logger/_Duplicate.pm
+++ b/usr/share/perl5/Lemonldap/NG/Common/Logger/_Duplicate.pm
@@ -22,8 +22,7 @@ sub AUTOLOAD {
     $self->{logger}->$AUTOLOAD(@_);
     return if $AUTOLOAD !~ m/^(?:error|warn|notice|info|debug)$/;
     my $msg = shift;
-    $msg = "[$AUTOLOAD] $msg";
-    $self->{dup}->debug( $msg, @_ );
+    $self->{dup}->$AUTOLOAD( $msg, @_ );
 }
 
 1;
--- a/usr/share/perl5/Lemonldap/NG/Handler/Main/Init.pm
+++ b/usr/share/perl5/Lemonldap/NG/Handler/Main/Init.pm
@@ -63,19 +63,25 @@ sub logLevelInit {
     $class->logger( $logger->new( $class->localConfig ) );
     $class->logger->error($err) if $err;
     $class->logger->debug("Logger $logger loaded");
-    $logger = $class->localConfig->{userLogger} || $logger;
-    eval "require $logger";
-    die $@ if ($@);
-    require Lemonldap::NG::Common::Logger::_Duplicate;
-    $class->userLogger(
-        Lemonldap::NG::Common::Logger::_Duplicate->new(
-            $class->localConfig,
-            user   => 1,
-            logger => $logger,
-            dup    => $class->logger
-        )
-    );
-    $class->logger->debug("User logger $logger loaded");
+    if ( $class->localConfig->{userLogger} ) {
+        $logger = $class->localConfig->{userLogger};
+        eval "require $logger";
+        die $@ if ($@);
+        require Lemonldap::NG::Common::Logger::_Duplicate;
+        $class->userLogger(
+            Lemonldap::NG::Common::Logger::_Duplicate->new(
+                $class->localConfig,
+                user   => 1,
+                logger => $logger,
+                dup    => $class->logger
+            )
+        );
+        $class->logger->debug("User logger $logger loaded");
+    }
+    else {
+        $class->userLogger( $class->logger );
+        $class->logger->debug("No need to load userLogger");
+    }
 
     my $auditlogger =
          $ENV{LLNG_AUDITLOGGER}
